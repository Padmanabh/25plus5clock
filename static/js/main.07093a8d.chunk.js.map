{"version":3,"sources":["TimerLengthControl.js","App.js","reportWebVitals.js","index.js"],"names":["TimerLengthControl","props","className","id","mode","toLowerCase","title","onClick","onDecrement","value","length","onIncrement","App","CONSTANTS","SESSION","BREAK","SESSION_LENGTH","BREAK_LENGTH","initialState","breakLength","sessionLength","timerState","STOPPED","timerType","timeLimit","timerRunning","timeout","useState","state","setState","handleDecrement","newSessionLength","newBreakLength","newTimeLimit","prev","handleIncrement","minutes","Math","floor","seconds","getClock","beep","document","getElementById","pause","currentTime","preload","src","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"6OA6BeA,EA3BY,SAACC,GACxB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,GAAIF,EAAMG,KAAKC,cAAc,SAAlC,SAA8CJ,EAAMK,QACpD,wBACIJ,UAAU,YACVK,QAAS,kBAAIN,EAAMO,YAAYP,EAAMG,OACrCK,MAAM,IACNN,GAAIF,EAAMG,KAAKC,cAAc,aAJjC,SAMI,mBAAGH,UAAU,6BAEjB,qBAAKA,UAAU,YAAYC,GAAIF,EAAMG,KAAKC,cAAc,UAAxD,SACKJ,EAAMS,SAEX,wBACIR,UAAU,YACVK,QAAS,kBAAIN,EAAMU,YAAYV,EAAMG,OACrCK,MAAM,IACNN,GAAIF,EAAMG,KAAKC,cAAc,aAJjC,SAMI,mBAAGH,UAAU,+BCuGdU,MAxHf,WACE,IAkBMC,EAAY,CAChBC,QAAS,UACTC,MAAO,QACPC,eAAgB,GAChBC,aAAc,IAEVC,EAAe,CACnBC,YAAa,EACbC,cAAe,GACfC,WAAYR,EAAUS,QACtBC,UAAWV,EAAUC,QACrBU,UAAW,KACXC,cAAc,EACdC,QAAS,MAhCE,EAkCaC,mBAAST,GAlCtB,mBAkCNU,EAlCM,KAkCCC,EAlCD,KAmCPC,EAAkB,SAAC1B,GACvB,IAAKwB,EAAMH,aAAc,CACvB,IAAMM,EAAmB3B,IAASS,EAAUC,QAAUc,EAAMR,cAAgB,EAAIQ,EAAMR,cAAgB,EAAI,EAAIQ,EAAMR,cAC9GY,EAAiB5B,IAASS,EAAUE,MAAQa,EAAMT,YAAc,EAAIS,EAAMT,YAAc,EAAI,EAAIS,EAAMT,YACtGc,EAAeL,EAAML,YAAcV,EAAUC,QAA6B,GAAnBiB,EAAyC,GAAjBC,EACrFH,GAAS,SAAAK,GAAI,kCACRA,GADQ,IACFd,cAAeW,EAAkBZ,YAAaa,EAAgBR,UAAWS,SAIlFE,EAAkB,SAAC/B,GACvB,IAAKwB,EAAMH,aAAc,CACvB,IAAMM,EAAmB3B,IAASS,EAAUC,QAAUc,EAAMR,cAAgBP,EAAUG,eAAiBY,EAAMR,cAAgB,EAAIP,EAAUG,eAAiBY,EAAMR,cAC5JY,EAAiB5B,IAASS,EAAUE,MAAQa,EAAMT,YAAcN,EAAUI,aAAeW,EAAMT,YAAc,EAAIN,EAAUI,aAAeW,EAAMT,YAChJc,EAAeL,EAAML,YAAcV,EAAUC,QAA6B,GAAnBiB,EAAyC,GAAjBC,EACrFH,GAAS,SAAAK,GAAI,kCACRA,GADQ,IACFd,cAAeW,EAAkBZ,YAAaa,EAAgBR,UAAWS,SA0BxF,OACE,sBAAK9B,GAAG,YAAR,UACE,qBAAKD,UAAU,aAAf,0BACA,gCACE,cAAC,EAAD,CACEQ,OAAQkB,EAAMT,YACdX,YAAasB,EACbnB,YAAawB,EACb7B,MAAM,eACNF,KAAMS,EAAUE,QAElB,cAAC,EAAD,CACEL,OAAQkB,EAAMR,cACdZ,YAAasB,EACbnB,YAAawB,EACb7B,MAAM,iBACNF,KAAMS,EAAUC,aAGpB,qBAAKZ,UAAU,QAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKC,GAAG,cAAcD,UAAW0B,EAAMJ,UAAY,GAAK,UAAY,GAApE,SAAyEI,EAAML,YAC/E,qBAAKpB,GAAG,YAAYD,UAAW0B,EAAMJ,UAAY,GAAK,UAAY,GAAlE,SA9BS,WACf,IAAIY,EAAUC,KAAKC,MAAMV,EAAMJ,UAAY,IACvCe,EAAUX,EAAMJ,UAAsB,GAAVY,EAGhC,OADAA,EAAUA,EAAU,GAAK,IAAMA,EAAUA,GACxB,KAFjBG,EAAUA,EAAU,GAAK,IAAMA,EAAUA,GA2BoCC,UAG3E,sBAAKtC,UAAU,gBAAf,UACE,yBAAQC,GAAG,aAAaI,QAxCN,WACtBsB,GAAS,SAAAK,GAAI,kCACRA,GADQ,IACFT,cAAeS,EAAKT,mBAsC3B,UACE,mBAAGvB,UAAU,qBACb,mBAAGA,UAAU,yBAEf,wBAAQC,GAAG,QAAQI,QApDL,WAClBsB,EAASX,GACT,IAAMuB,EAAOC,SAASC,eAAe,QACrCF,EAAKG,QACLH,EAAKI,YAAc,GAgDf,SACE,mBAAG3C,UAAU,6BAGjB,uBACEC,GAAG,OACH2C,QAAQ,OACRC,IAAI,kHC5GGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjB,SAASC,eAAe,SAM1BK,M","file":"static/js/main.07093a8d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst TimerLengthControl = (props) => {\r\n    return (\r\n        <div className=\"length-control\">\r\n            <div id={props.mode.toLowerCase()+\"-label\"} >{props.title}</div>\r\n            <button\r\n                className=\"btn-level\"\r\n                onClick={()=>props.onDecrement(props.mode)}\r\n                value=\"-\"\r\n                id={props.mode.toLowerCase()+\"-decrement\"}\r\n            >\r\n                <i className=\"fa fa-arrow-down fa-2x\" />\r\n            </button>\r\n            <div className=\"btn-level\" id={props.mode.toLowerCase()+\"-length\"}>\r\n                {props.length}\r\n            </div>\r\n            <button\r\n                className=\"btn-level\"\r\n                onClick={()=>props.onIncrement(props.mode)}\r\n                value=\"+\"\r\n                id={props.mode.toLowerCase()+\"-increment\"}\r\n            >\r\n                <i className=\"fa fa-arrow-up fa-2x\" />\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TimerLengthControl\r\n","\nimport './App.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport TimerLengthControl from './TimerLengthControl'\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n  const accurateInterval = function (fn, time) {\n    var cancel, nextAt, timeout, wrapper;\n    nextAt = new Date().getTime() + time;\n    timeout = null;\n    wrapper = function () {\n      nextAt += time;\n      timeout = setTimeout(wrapper, nextAt - new Date().getTime());\n      return fn();\n    };\n    cancel = function () {\n      return clearTimeout(timeout);\n    };\n    timeout = setTimeout(wrapper, nextAt - new Date().getTime());\n    return {\n      cancel: cancel\n    };\n  };\n\n  const CONSTANTS = {\n    SESSION: \"SESSION\",\n    BREAK: \"BREAK\",\n    SESSION_LENGTH: 60,\n    BREAK_LENGTH: 60\n  }\n  const initialState = {\n    breakLength: 5,\n    sessionLength: 25,\n    timerState: CONSTANTS.STOPPED,\n    timerType: CONSTANTS.SESSION,\n    timeLimit: 25 * 60,\n    timerRunning: false,\n    timeout: null\n  }\n  const [state, setState] = useState(initialState)\n  const handleDecrement = (mode) => {\n    if (!state.timerRunning) {\n      const newSessionLength = mode === CONSTANTS.SESSION ? state.sessionLength > 1 ? state.sessionLength - 1 : 1 : state.sessionLength;\n      const newBreakLength = mode === CONSTANTS.BREAK ? state.breakLength > 1 ? state.breakLength - 1 : 1 : state.breakLength;\n      const newTimeLimit = state.timerType === CONSTANTS.SESSION ? newSessionLength * 60 : newBreakLength * 60;\n      setState(prev => ({\n        ...prev, sessionLength: newSessionLength, breakLength: newBreakLength, timeLimit: newTimeLimit\n      }))\n    }\n  }\n  const handleIncrement = (mode) => {\n    if (!state.timerRunning) {\n      const newSessionLength = mode === CONSTANTS.SESSION ? state.sessionLength < CONSTANTS.SESSION_LENGTH ? state.sessionLength + 1 : CONSTANTS.SESSION_LENGTH : state.sessionLength;\n      const newBreakLength = mode === CONSTANTS.BREAK ? state.breakLength < CONSTANTS.BREAK_LENGTH ? state.breakLength + 1 : CONSTANTS.BREAK_LENGTH : state.breakLength;\n      const newTimeLimit = state.timerType === CONSTANTS.SESSION ? newSessionLength * 60 : newBreakLength * 60;\n      setState(prev => ({\n        ...prev, sessionLength: newSessionLength, breakLength: newBreakLength, timeLimit: newTimeLimit\n      }))\n    }\n  }\n  const handleReset = () => {\n    setState(initialState);\n    const beep = document.getElementById(\"beep\");\n    beep.pause();\n    beep.currentTime = 0;\n  }\n\n  //let timeout = null;\n  const handleStopStart = () => {\n    setState(prev => ({\n      ...prev, timerRunning: !prev.timerRunning\n    }))\n  }\n\n  const getClock = () => {\n    let minutes = Math.floor(state.timeLimit / 60);\n    let seconds = state.timeLimit - minutes * 60;\n    seconds = seconds < 10 ? '0' + seconds : seconds;\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n    return minutes + ':' + seconds;\n  }\n\n  return (\n    <div id=\"container\">\n      <div className=\"main-title\">25 + 5 Clock</div>\n      <div>\n        <TimerLengthControl\n          length={state.breakLength}\n          onDecrement={handleDecrement}\n          onIncrement={handleIncrement}\n          title=\"Break Length\"\n          mode={CONSTANTS.BREAK}\n        />\n        <TimerLengthControl\n          length={state.sessionLength}\n          onDecrement={handleDecrement}\n          onIncrement={handleIncrement}\n          title=\"Session Length\"\n          mode={CONSTANTS.SESSION}\n        />\n      </div>\n      <div className=\"timer\">\n        <div className=\"timer-wrapper\">\n          <div id=\"timer-label\" className={state.timeLimit < 60 ? \"warning\" : \"\"}>{state.timerType}</div>\n          <div id=\"time-left\" className={state.timeLimit < 60 ? \"warning\" : \"\"}>{getClock()}</div>\n        </div>\n      </div>\n      <div className=\"timer-control\">\n        <button id=\"start_stop\" onClick={handleStopStart}>\n          <i className=\"fa fa-play fa-2x\" />\n          <i className=\"fa fa-pause fa-2x\" />\n        </button>\n        <button id=\"reset\" onClick={handleReset}>\n          <i className=\"fa fa-refresh fa-2x\" />\n        </button>\n      </div>\n      <audio\n        id=\"beep\"\n        preload=\"auto\"\n        src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}